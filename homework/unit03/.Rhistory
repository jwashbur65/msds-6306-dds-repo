knitr::opts_chunk$set(echo = TRUE, warning=FALSE)
describe=function(x, showSapply=FALSE, showRowNames=FALSE) {
print("---class---")
print(class(x))
print("---typeof---")
print(typeof(x))
print("---dim---")
print(dim(x))
print("---names (col names)---")
print(names(x))
if(showRowNames || (class(x) == "data.frame" && nrow(x) <= 20)) {
print("---row.names---")
print(row.names(x))
}
print("---str---")
print(str(x))
print("---summary---")
print(summary(x))
if(showSapply) {
print("---sapply---")
print(sapply(x, class))
}
}
#describe(df$Sex)
sexTable=table(df$Sex)
#describe(df$Sex)
sexTable=table(df$Sex)
knitr::opts_chunk$set(echo = TRUE, warning=FALSE)
describe=function(x, showSapply=FALSE, showRowNames=FALSE) {
print("---class---")
print(class(x))
print("---typeof---")
print(typeof(x))
print("---dim---")
print(dim(x))
print("---names (col names)---")
print(names(x))
if(showRowNames || (class(x) == "data.frame" && nrow(x) <= 20)) {
print("---row.names---")
print(row.names(x))
}
print("---str---")
print(str(x))
print("---summary---")
print(summary(x))
if(showSapply) {
print("---sapply---")
print(sapply(x, class))
}
}
df=read.csv("./awesome-public-datasets/DataSets/titanic.csv")
#describe(df)
#describe(df$Sex)
sexTable=table(df$Sex)
sexTable['female']
plot(df$Sex, main="Male/Female Passengers", xlab = "Sex", ylab = "# of Passengers", ylim = c(0, 600))
#describe(df$Sex)
sexTable=table(df$Sex)
sexTable$female
?median
knitr::opts_chunk$set(echo = TRUE, warning=FALSE)
describe=function(x, showSapply=FALSE, showRowNames=FALSE) {
print("---class---")
print(class(x))
print("---typeof---")
print(typeof(x))
print("---dim---")
print(dim(x))
print("---names (col names)---")
print(names(x))
if(showRowNames || (class(x) == "data.frame" && nrow(x) <= 20)) {
print("---row.names---")
print(row.names(x))
}
print("---str---")
print(str(x))
print("---summary---")
print(summary(x))
if(showSapply) {
print("---sapply---")
print(sapply(x, class))
}
}
df=read.csv("./awesome-public-datasets/DataSets/titanic.csv")
#describe(df)
#describe(df$Sex)
sexTable=table(df$Sex)
sexTable
plot(df$Sex, main="Male/Female Passengers", xlab = "Sex", ylab = "# of Passengers", ylim = c(0, 600))
#describe(df)
x=sapply(df, mean, na.rm=TRUE)
x[c('Age', 'Fare', 'Survived')]
sleepDf=read.csv("http://talklab.psy.gla.ac.uk/L1_labs/lab_1/homework/sleep_data_01.csv")
#describe(sleepDf)
knitr::opts_chunk$set(echo = TRUE, warning=FALSE)
describe=function(x, showSapply=FALSE, showRowNames=FALSE) {
print("---class---")
print(class(x))
print("---typeof---")
print(typeof(x))
print("---dim---")
print(dim(x))
print("---names (col names)---")
print(names(x))
if(showRowNames || (class(x) == "data.frame" && nrow(x) <= 20)) {
print("---row.names---")
print(row.names(x))
}
print("---str---")
print(str(x))
print("---summary---")
print(summary(x))
if(showSapply) {
print("---sapply---")
print(sapply(x, class))
}
}
df=read.csv("./awesome-public-datasets/DataSets/titanic.csv")
#describe(df)
#describe(df$Sex)
sexTable=table(df$Sex)
sexTable
plot(df$Sex, main="Male/Female Passengers", xlab = "Sex", ylab = "# of Passengers", ylim = c(0, 600))
#describe(df)
x=sapply(df, mean, na.rm=TRUE)
x[c('Age', 'Fare', 'Survived')]
sleepDf=read.csv("http://talklab.psy.gla.ac.uk/L1_labs/lab_1/homework/sleep_data_01.csv")
#describe(sleepDf)
analyzeSleep=function(x){
medianAge = median(x$Age, na.rm=TRUE)
minDuration <- min(x$Duration, na.rm = TRUE)
maxDuration <- max(x$Duration, na.rm = TRUE)
meanRses <- mean(x$RSES, na.rm = TRUE)
sdRses <- sd(x$RSES, na.rm = TRUE)
# b. Create a data.frame object called report: it should consist of the median age, the RSES mean
# and standard deviation respectively divided by five (since there are five questions and these
# scores are summed), and the range of Duration (the statistical definition of range; it should be
# a single number.)
report=data.frame("MedianAge" = medianAge,
"MeanRSES" = meanRses,
"SDRSES" = sdRses/5,
"Range" = (maxDuration - minDuration))
# c. Change the column names of this data.frame to MedianAge, SelfEsteem, SE_SD, and
# DurationRange.
colnames(report)=c("MedianAge", "SelfEsteem", "SE_SD", "DurationRange")
# d. Round the report to at most 2 digits: leave this as the closing line to the function.
report=round(report, digits = 2)
return(report)
}
# call function that gets the mean, sd, median, min, max, n for each attribute
x=analyzeSleep(sleepDf)
x
#install.packages("fivethirtyeight", repos = "http://cran.us.r-project.org")
knitr::opts_chunk$set(echo = TRUE, warning=FALSE)
describe=function(x, showSapply=FALSE, showRowNames=FALSE) {
print("---class---")
print(class(x))
print("---typeof---")
print(typeof(x))
print("---dim---")
print(dim(x))
print("---names (col names)---")
print(names(x))
if(showRowNames || (class(x) == "data.frame" && nrow(x) <= 20)) {
print("---row.names---")
print(row.names(x))
}
print("---str---")
print(str(x))
print("---summary---")
print(summary(x))
if(showSapply) {
print("---sapply---")
print(sapply(x, class))
}
}
df=read.csv("./awesome-public-datasets/DataSets/titanic.csv")
#describe(df)
#describe(df$Sex)
sexTable=table(df$Sex)
sexTable
plot(df$Sex, main="Male/Female Passengers", xlab = "Sex", ylab = "# of Passengers", ylim = c(0, 600))
#describe(df)
x=sapply(df, mean, na.rm=TRUE)
x[c('Age', 'Fare', 'Survived')]
sleepDf=read.csv("http://talklab.psy.gla.ac.uk/L1_labs/lab_1/homework/sleep_data_01.csv")
#describe(sleepDf)
analyzeSleep=function(x){
medianAge = median(x$Age, na.rm=TRUE)
minDuration <- min(x$Duration, na.rm = TRUE)
maxDuration <- max(x$Duration, na.rm = TRUE)
meanRses <- mean(x$RSES, na.rm = TRUE)
sdRses <- sd(x$RSES, na.rm = TRUE)
# b. Create a data.frame object called report: it should consist of the median age, the RSES mean
# and standard deviation respectively divided by five (since there are five questions and these
# scores are summed), and the range of Duration (the statistical definition of range; it should be
# a single number.)
report=data.frame("MedianAge" = medianAge,
"MeanRSES" = meanRses,
"SDRSES" = sdRses/5,
"Range" = (maxDuration - minDuration))
# c. Change the column names of this data.frame to MedianAge, SelfEsteem, SE_SD, and
# DurationRange.
colnames(report)=c("MedianAge", "SelfEsteem", "SE_SD", "DurationRange")
# d. Round the report to at most 2 digits: leave this as the closing line to the function.
report=round(report, digits = 2)
return(report)
}
# call function that gets the mean, sd, median, min, max, n for each attribute
x=analyzeSleep(sleepDf)
x
#install.packages("fivethirtyeight", repos = "http://cran.us.r-project.org")
library(fivethirtyeight)
#describe(data(package = "fivethirtyeight"))
dataSets = data(package = "fivethirtyeight")$results[, "Item"]
dataSets[22]
df=fivethirtyeight::college_recent_grads
#df
#describe(df)
#vignette("fivethirtyeight", package = "fivethirtyeight")
# http://fivethirtyeight.com/features/the-economic-guide-to-picking-a-college-major/
data(package = "fivethirtyeight")
#vignette("fivethirtyeight", package = "fivethirtyeight")
# http://fivethirtyeight.com/features/the-economic-guide-to-picking-a-college-major/
data(package = "fivethirtyeight")
vignette("fivethirtyeight", package = "fivethirtyeight")
# http://fivethirtyeight.com/features/the-economic-guide-to-picking-a-college-major/
#data(package = "fivethirtyeight")
knitr::opts_chunk$set(echo = TRUE, warning=FALSE)
describe=function(x, showSapply=FALSE, showRowNames=FALSE) {
print("---class---")
print(class(x))
print("---typeof---")
print(typeof(x))
print("---dim---")
print(dim(x))
print("---names (col names)---")
print(names(x))
if(showRowNames || (class(x) == "data.frame" && nrow(x) <= 20)) {
print("---row.names---")
print(row.names(x))
}
print("---str---")
print(str(x))
print("---summary---")
print(summary(x))
if(showSapply) {
print("---sapply---")
print(sapply(x, class))
}
}
df=read.csv("./awesome-public-datasets/DataSets/titanic.csv")
#describe(df)
#describe(df$Sex)
sexTable=table(df$Sex)
sexTable
plot(df$Sex, main="Male/Female Passengers", xlab = "Sex", ylab = "# of Passengers", ylim = c(0, 600))
#describe(df)
x=sapply(df, mean, na.rm=TRUE)
x[c('Age', 'Fare', 'Survived')]
sleepDf=read.csv("http://talklab.psy.gla.ac.uk/L1_labs/lab_1/homework/sleep_data_01.csv")
#describe(sleepDf)
analyzeSleep=function(x){
medianAge = median(x$Age, na.rm=TRUE)
minDuration <- min(x$Duration, na.rm = TRUE)
maxDuration <- max(x$Duration, na.rm = TRUE)
meanRses <- mean(x$RSES, na.rm = TRUE)
sdRses <- sd(x$RSES, na.rm = TRUE)
# b. Create a data.frame object called report: it should consist of the median age, the RSES mean
# and standard deviation respectively divided by five (since there are five questions and these
# scores are summed), and the range of Duration (the statistical definition of range; it should be
# a single number.)
report=data.frame("MedianAge" = medianAge,
"MeanRSES" = meanRses,
"SDRSES" = sdRses/5,
"Range" = (maxDuration - minDuration))
# c. Change the column names of this data.frame to MedianAge, SelfEsteem, SE_SD, and
# DurationRange.
colnames(report)=c("MedianAge", "SelfEsteem", "SE_SD", "DurationRange")
# d. Round the report to at most 2 digits: leave this as the closing line to the function.
report=round(report, digits = 2)
return(report)
}
# call function that gets the mean, sd, median, min, max, n for each attribute
x=analyzeSleep(sleepDf)
x
#install.packages("fivethirtyeight", repos = "http://cran.us.r-project.org")
library(fivethirtyeight)
#describe(data(package = "fivethirtyeight"))
dataSets = data(package = "fivethirtyeight")$results[, "Item"]
dataSets[22]
df=fivethirtyeight::college_recent_grads
#df
#describe(df)
vignette("fivethirtyeight", package = "fivethirtyeight")
# http://fivethirtyeight.com/features/the-economic-guide-to-picking-a-college-major/
#data(package = "fivethirtyeight")
dim(df)
names(df)
length(colnames(df))
knitr::opts_chunk$set(echo = TRUE, warning=FALSE)
describe=function(x, showSapply=FALSE, showRowNames=FALSE) {
print("---class---")
print(class(x))
print("---typeof---")
print(typeof(x))
print("---dim---")
print(dim(x))
print("---names (col names)---")
print(names(x))
if(showRowNames || (class(x) == "data.frame" && nrow(x) <= 20)) {
print("---row.names---")
print(row.names(x))
}
print("---str---")
print(str(x))
print("---summary---")
print(summary(x))
if(showSapply) {
print("---sapply---")
print(sapply(x, class))
}
}
df=read.csv("./awesome-public-datasets/DataSets/titanic.csv")
#describe(df)
#describe(df$Sex)
sexTable=table(df$Sex)
sexTable
plot(df$Sex, main="Male/Female Passengers", xlab = "Sex", ylab = "# of Passengers", ylim = c(0, 600))
#describe(df)
x=sapply(df, mean, na.rm=TRUE)
x[c('Age', 'Fare', 'Survived')]
sleepDf=read.csv("http://talklab.psy.gla.ac.uk/L1_labs/lab_1/homework/sleep_data_01.csv")
#describe(sleepDf)
analyzeSleep=function(x){
medianAge = median(x$Age, na.rm=TRUE)
minDuration <- min(x$Duration, na.rm = TRUE)
maxDuration <- max(x$Duration, na.rm = TRUE)
meanRses <- mean(x$RSES, na.rm = TRUE)
sdRses <- sd(x$RSES, na.rm = TRUE)
# b. Create a data.frame object called report: it should consist of the median age, the RSES mean
# and standard deviation respectively divided by five (since there are five questions and these
# scores are summed), and the range of Duration (the statistical definition of range; it should be
# a single number.)
report=data.frame("MedianAge" = medianAge,
"MeanRSES" = meanRses,
"SDRSES" = sdRses/5,
"Range" = (maxDuration - minDuration))
# c. Change the column names of this data.frame to MedianAge, SelfEsteem, SE_SD, and
# DurationRange.
colnames(report)=c("MedianAge", "SelfEsteem", "SE_SD", "DurationRange")
# d. Round the report to at most 2 digits: leave this as the closing line to the function.
report=round(report, digits = 2)
return(report)
}
# call function that gets the mean, sd, median, min, max, n for each attribute
x=analyzeSleep(sleepDf)
x
#install.packages("fivethirtyeight", repos = "http://cran.us.r-project.org")
library(fivethirtyeight)
#describe(data(package = "fivethirtyeight"))
dataSets = data(package = "fivethirtyeight")$results[, "Item"]
dataSets[22]
df=fivethirtyeight::college_recent_grads
#df
#describe(df)
vignette("fivethirtyeight", package = "fivethirtyeight")
# http://fivethirtyeight.com/features/the-economic-guide-to-picking-a-college-major/
#data(package = "fivethirtyeight")
dim(df)
names(df)
length(colnames(df))
# create table out of the major_category and output the table
#majorCategoriesTable=table(df$major_category)
#majorCategoriesTable
# convert table to data.frame, and output major_count
#major_count=as.data.frame(majorCategoriesTable)
#colnames(major_count)=c("major", "count")
#major_count
major_count = table(df$major_category)
major_count
#describe(major_count)
names(major_count)
knitr::opts_chunk$set(echo = TRUE, warning=FALSE)
describe=function(x, showSapply=FALSE, showRowNames=FALSE) {
print("---class---")
print(class(x))
print("---typeof---")
print(typeof(x))
print("---dim---")
print(dim(x))
print("---names (col names)---")
print(names(x))
if(showRowNames || (class(x) == "data.frame" && nrow(x) <= 20)) {
print("---row.names---")
print(row.names(x))
}
print("---str---")
print(str(x))
print("---summary---")
print(summary(x))
if(showSapply) {
print("---sapply---")
print(sapply(x, class))
}
}
df=read.csv("./awesome-public-datasets/DataSets/titanic.csv")
#describe(df)
#describe(df$Sex)
sexTable=table(df$Sex)
sexTable
plot(df$Sex, main="Male/Female Passengers", xlab = "Sex", ylab = "# of Passengers", ylim = c(0, 600))
#describe(df)
x=sapply(df, mean, na.rm=TRUE)
x[c('Age', 'Fare', 'Survived')]
sleepDf=read.csv("http://talklab.psy.gla.ac.uk/L1_labs/lab_1/homework/sleep_data_01.csv")
#describe(sleepDf)
analyzeSleep=function(x){
medianAge = median(x$Age, na.rm=TRUE)
minDuration <- min(x$Duration, na.rm = TRUE)
maxDuration <- max(x$Duration, na.rm = TRUE)
meanRses <- mean(x$RSES, na.rm = TRUE)
sdRses <- sd(x$RSES, na.rm = TRUE)
# b. Create a data.frame object called report: it should consist of the median age, the RSES mean
# and standard deviation respectively divided by five (since there are five questions and these
# scores are summed), and the range of Duration (the statistical definition of range; it should be
# a single number.)
report=data.frame("MedianAge" = medianAge,
"MeanRSES" = meanRses,
"SDRSES" = sdRses/5,
"Range" = (maxDuration - minDuration))
# c. Change the column names of this data.frame to MedianAge, SelfEsteem, SE_SD, and
# DurationRange.
colnames(report)=c("MedianAge", "SelfEsteem", "SE_SD", "DurationRange")
# d. Round the report to at most 2 digits: leave this as the closing line to the function.
report=round(report, digits = 2)
return(report)
}
# call function that gets the mean, sd, median, min, max, n for each attribute
x=analyzeSleep(sleepDf)
x
#install.packages("fivethirtyeight", repos = "http://cran.us.r-project.org")
library(fivethirtyeight)
#describe(data(package = "fivethirtyeight"))
dataSets = data(package = "fivethirtyeight")$results[, "Item"]
dataSets[22]
df=fivethirtyeight::college_recent_grads
#df
#describe(df)
vignette("fivethirtyeight", package = "fivethirtyeight")
# http://fivethirtyeight.com/features/the-economic-guide-to-picking-a-college-major/
#data(package = "fivethirtyeight")
dim(df)
names(df)
length(colnames(df))
# create table out of the major_category and output the table
#majorCategoriesTable=table(df$major_category)
#majorCategoriesTable
# convert table to data.frame, and output major_count
#major_count=as.data.frame(majorCategoriesTable)
#colnames(major_count)=c("major", "count")
#major_count
major_count = table(df$major_category)
major_count
#describe(major_count)
#names(major_count)
# create table out of the major_category and output the table
#majorCategoriesTable=table(df$major_category)
#majorCategoriesTable
# convert table to data.frame, and output major_count
#major_count=as.data.frame(majorCategoriesTable)
#colnames(major_count)=c("major", "count")
#major_count
major_count = table(df$major_category)
major_count
#describe(major_count)
names(major_count)
# create table out of the major_category and output the table
#majorCategoriesTable=table(df$major_category)
#majorCategoriesTable
# convert table to data.frame, and output major_count
#major_count=as.data.frame(majorCategoriesTable)
#colnames(major_count)=c("major", "count")
#major_count
major_count = table(df$major_category)
major_count
#describe(major_count)
major_count[9]
# create table out of the major_category and output the table
#majorCategoriesTable=table(df$major_category)
#majorCategoriesTable
# convert table to data.frame, and output major_count
#major_count=as.data.frame(majorCategoriesTable)
#colnames(major_count)=c("major", "count")
#major_count
major_count = table(df$major_category)
major_count
#describe(major_count)
major_count$Health
# create table out of the major_category and output the table
#majorCategoriesTable=table(df$major_category)
#majorCategoriesTable
# convert table to data.frame, and output major_count
#major_count=as.data.frame(majorCategoriesTable)
#colnames(major_count)=c("major", "count")
#major_count
major_count = table(df$major_category)
major_count
#describe(major_count)
major_count["Health"]
